{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{166:function(t,a,s){t.exports=s.p+\"assets/img/pointer.853abe4d.png\"},200:function(t,a,s){\"use strict\";s.r(a);var r=[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r(\"div\",{staticClass:\"content\"},[r(\"h1\",{attrs:{id:\"c\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" C++\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"程序的编译和调试\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#程序的编译和调试\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 程序的编译和调试\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"gcc编译器\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gcc编译器\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" gcc编译器\")]),t._v(\" \"),r(\"p\",[t._v(\"gcc hello.c -o hello\\n-o 输出可执行文件\\n-c 只要求编译器输出目标代码(.o文件)而不必输出可执行文件\\n-g 用于调试\\n-Wall 显示一切警告\\n./hello 查看输出结果\")]),t._v(\" \"),r(\"p\",[t._v(\"当我们在改动源码文件时候，需要重新编译再次执行。\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"程序调试\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#程序调试\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 程序调试\")]),t._v(\" \"),r(\"p\",[t._v(\"利用 \"),r(\"strong\",[t._v(\"FILE\")]),t._v(\",\"),r(\"strong\",[t._v(\"LINE\")]),t._v(\",\"),r(\"strong\",[t._v(\"FUNCTION\")]),t._v(\" 实现代码跟踪调试。(两个下划线)\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"strong\",[t._v(\"FILE\")]),t._v(\" : 显示文件名\")]),t._v(\" \"),r(\"li\",[r(\"strong\",[t._v(\"LINE\")]),t._v(\": 显示行号\")]),t._v(\" \"),r(\"li\",[r(\"strong\",[t._v(\"FUNCTION\")]),t._v(\": 显示函数名\\n使用这些可以记录进日志，方便调试大型程序。\")])]),t._v(\" \"),r(\"div\",{staticClass:\"language-c extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[r(\"code\",[r(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#\"),r(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"<stdio.h>\")])]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" argc\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"char\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"argv\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),r(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),r(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"%s,%s,%d\\\\n\"')]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),r(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"__FILE__\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"__FUNCTION__\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),r(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"__LINE__\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),r(\"h3\",{attrs:{id:\"c语言基础\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c语言基础\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" C语言基础\")]),t._v(\" \"),r(\"p\",[t._v(\"一个程序应当包含两部分内容:\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"对数据的描述，在程序中要知道数据的类型和数据的组织形式，即数据结构。\")]),t._v(\" \"),r(\"li\",[t._v(\"对操作的描述，即操作步骤，也就是算法。也可以说是程序的解决思路(逻辑)。\")])]),t._v(\" \"),r(\"h4\",{attrs:{id:\"算法的基本概念\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#算法的基本概念\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 算法的基本概念\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"做任何事情都有一定的步骤。步骤要按照一定的顺序进行，缺一不可，次序也不能错。广义的说，为解决一个问题而采取的方法和步骤就称为算法。\")])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"指针\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指针\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 指针\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"概述\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#概述\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 概述\")]),t._v(\" \"),r(\"p\",[t._v(\"在C语言中，内存单元的地址成为指针，专门用来存放地址的变量，成为指针变量。\\nC语言程序设计中使用指针可以：\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"使程序简洁、紧凑、高效\")]),t._v(\" \"),r(\"li\",[t._v(\"有效的表示复杂的数据结构\")]),t._v(\" \"),r(\"li\",[t._v(\"动态分配内存\")]),t._v(\" \"),r(\"li\",[t._v(\"得到多余一个的函数返回值\")])]),t._v(\" \"),r(\"h3\",{attrs:{id:\"地址和变量\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#地址和变量\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 地址和变量\")]),t._v(\" \"),r(\"p\",[t._v(\"在计算机内存中，每一个字节单元，都有一个编号，称为地址。内存以字节为单位开始编号，这个编号即是地址。\\n一个字节为8位，为1 Byte = 8 Bit\\n编译或函数调用时为 其分配内存单元。\\n变量是对程序中数据存储空间的抽象。\\n我们看到的地址其实是起始地址，一般是由低往高存储，默认是连续性存储，所以我们打印看到的都是起始地址。\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"指针-2\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指针-2\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 指针\")]),t._v(\" \"),r(\"p\",[t._v(\"在C语言中，内存单元的地址称为指针，专门用来存放地址的变量，称为指针变量。在不影响理解的情况中，有时对地址、指针和指针变量不区分，通称指针。\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"指针变量的说明\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指针变量的说明\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 指针变量的说明\")]),t._v(\" \"),r(\"p\",[t._v(\"一般形式为：\\n<存储类型> <数据类型> * <指针变量名> = <地址量>；\\n指针在说明的同时，也可以被赋予初值，称为指针的初始化\\n一般形式为：\\n<存储类型> <数据类型> * <指针变量名> = <地址量>;\\ne.g.\")]),t._v(\" \"),r(\"div\",{staticClass:\"language-c extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[r(\"code\",[r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" a\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"p \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"a\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//将变量a的地址作为初值赋予了int型指针p\")]),t._v(\"\\n\")])])]),r(\"p\",[t._v(\"在上面语句中，把变量a的地址作为初值赋予了刚说明的int型指针p。\\n或者\")]),t._v(\" \"),r(\"div\",{staticClass:\"language-c extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[r(\"code\",[r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" a\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"p \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"a\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),r(\"p\",[t._v(\"或者\")]),t._v(\" \"),r(\"div\",{staticClass:\"language-c extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[r(\"code\",[r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" a\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"p\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\np \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"a\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),r(\"p\",[t._v(\"指针的存储类型是指针变量本身的存储类型。指针说明时指定的数据类型不是指针变量本身的数据类型，而是指针目标的数据类型。简称为指针的数据类型。\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"实质\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实质\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 实质\")]),t._v(\" \"),r(\"p\",[t._v(\"指针即是地址，变量定义后即需要内存空间，而内存空间则为其分配好后，内存单元的编号即是地址也就是指针。指针指向变量，指针的值是变量的起始地址。也就是说指针中存放的就是该变量的地址，该地址就是一个内存单元的编号，为一个16进制数字。  而变量中存在的则是提前定义好的数值。下面举例：\\ne.g.\")]),t._v(\" \"),r(\"div\",{staticClass:\"language-c extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[r(\"code\",[r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"short\")]),t._v(\" a\"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),r(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// short占2个字节(16bit)\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" b\"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),r(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),r(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// int占4个字节(32bit)\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"float\")]),t._v(\" c\"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),r(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20.00\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// float占4个字节(32bit)\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"char\")]),t._v(\" d\"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),r(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'A'\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),r(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// char占1个字节(8bit)\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"p\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\np \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"b\"),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),r(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//指针变量p指向了整型变量b\")]),t._v(\"\\n\")])])]),r(\"p\",[t._v(\"如图：\\n\"),r(\"img\",{attrs:{src:s(166),alt:\"\"}})]),t._v(\" \"),r(\"h3\",{attrs:{id:\"指针的运算\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指针的运算\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 指针的运算\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"指针运算是以指针变量所存放的地址量作为运算量而进行的运算。\")]),t._v(\" \"),r(\"li\",[t._v(\"指针运算的实质就是地址的计算\")]),t._v(\" \"),r(\"li\",[t._v(\"指针运算的种类是有限的，它只能进行赋值运算，算术运算和关系运算。\")])]),t._v(\" \"),r(\"h3\",{attrs:{id:\"指针关系运算\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#指针关系运算\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 指针关系运算\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"两指针之间的关系运算表示它们指向的地址位置之间的关系。指向地址打的指针大于指向地址小的指针。\")]),t._v(\" \"),r(\"li\",[t._v(\"指针与一般整数变量之间的关系运算没有意义。但可以和零进行等于或不等于的关系运算，判断指针是否为空。\")])])])}],n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},r,!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}