{"remainingRequest":"/home/bingyu/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/bingyu/vue/node_modules/vue-loader/lib/index.js??ref--1-1!/home/bingyu/vue/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/bingyu/vue/docs/2-Cpp/2-2-Cpp.md?vue&type=template&id=09a6eb79&","dependencies":[{"path":"/home/bingyu/vue/docs/2-Cpp/2-2-Cpp.md","mtime":1549626481893},{"path":"/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"c\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#c\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" C++\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"程序的编译和调试\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#程序的编译和调试\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 程序的编译和调试\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"gcc编译器\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#gcc编译器\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" gcc编译器\")]),_vm._v(\" \"),_c('p',[_vm._v(\"gcc hello.c -o hello\\n-o 输出可执行文件\\n-c 只要求编译器输出目标代码(.o文件)而不必输出可执行文件\\n-g 用于调试\\n-Wall 显示一切警告\\n./hello 查看输出结果\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当我们在改动源码文件时候，需要重新编译再次执行。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"程序调试\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#程序调试\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 程序调试\")]),_vm._v(\" \"),_c('p',[_vm._v(\"利用 \"),_c('strong',[_vm._v(\"FILE\")]),_vm._v(\",\"),_c('strong',[_vm._v(\"LINE\")]),_vm._v(\",\"),_c('strong',[_vm._v(\"FUNCTION\")]),_vm._v(\" 实现代码跟踪调试。(两个下划线)\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('strong',[_vm._v(\"FILE\")]),_vm._v(\" : 显示文件名\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"LINE\")]),_vm._v(\": 显示行号\")]),_vm._v(\" \"),_c('li',[_c('strong',[_vm._v(\"FUNCTION\")]),_vm._v(\": 显示函数名\\n使用这些可以记录进日志，方便调试大型程序。\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-c extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token macro property\"}},[_vm._v(\"#\"),_c('span',{pre:true,attrs:{\"class\":\"token directive keyword\"}},[_vm._v(\"include\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"<stdio.h>\")])]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"main\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" argc\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"char\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\"argv\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"printf\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"%s,%s,%d\\\\n\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token constant\"}},[_vm._v(\"__FILE__\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"__FUNCTION__\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token constant\"}},[_vm._v(\"__LINE__\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('h3',{attrs:{\"id\":\"c语言基础\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#c语言基础\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" C语言基础\")]),_vm._v(\" \"),_c('p',[_vm._v(\"一个程序应当包含两部分内容:\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"对数据的描述，在程序中要知道数据的类型和数据的组织形式，即数据结构。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"对操作的描述，即操作步骤，也就是算法。也可以说是程序的解决思路(逻辑)。\")])]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"算法的基本概念\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#算法的基本概念\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 算法的基本概念\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"做任何事情都有一定的步骤。步骤要按照一定的顺序进行，缺一不可，次序也不能错。广义的说，为解决一个问题而采取的方法和步骤就称为算法。\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"指针\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#指针\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 指针\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"概述\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#概述\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 概述\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在C语言中，内存单元的地址成为指针，专门用来存放地址的变量，成为指针变量。\\nC语言程序设计中使用指针可以：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"使程序简洁、紧凑、高效\")]),_vm._v(\" \"),_c('li',[_vm._v(\"有效的表示复杂的数据结构\")]),_vm._v(\" \"),_c('li',[_vm._v(\"动态分配内存\")]),_vm._v(\" \"),_c('li',[_vm._v(\"得到多余一个的函数返回值\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"地址和变量\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#地址和变量\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 地址和变量\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在计算机内存中，每一个字节单元，都有一个编号，称为地址。内存以字节为单位开始编号，这个编号即是地址。\\n一个字节为8位，为1 Byte = 8 Bit\\n编译或函数调用时为 其分配内存单元。\\n变量是对程序中数据存储空间的抽象。\\n我们看到的地址其实是起始地址，一般是由低往高存储，默认是连续性存储，所以我们打印看到的都是起始地址。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"指针-2\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#指针-2\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 指针\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在C语言中，内存单元的地址称为指针，专门用来存放地址的变量，称为指针变量。在不影响理解的情况中，有时对地址、指针和指针变量不区分，通称指针。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"指针变量的说明\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#指针变量的说明\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 指针变量的说明\")]),_vm._v(\" \"),_c('p',[_vm._v(\"一般形式为：\\n<存储类型> <数据类型> * <指针变量名> = <地址量>；\\n指针在说明的同时，也可以被赋予初值，称为指针的初始化\\n一般形式为：\\n<存储类型> <数据类型> * <指针变量名> = <地址量>;\\ne.g.\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-c extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\"p \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"//将变量a的地址作为初值赋予了int型指针p\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"在上面语句中，把变量a的地址作为初值赋予了刚说明的int型指针p。\\n或者\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-c extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\"p \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"或者\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-c extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\"p\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\np \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"指针的存储类型是指针变量本身的存储类型。指针说明时指定的数据类型不是指针变量本身的数据类型，而是指针目标的数据类型。简称为指针的数据类型。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"实质\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#实质\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 实质\")]),_vm._v(\" \"),_c('p',[_vm._v(\"指针即是地址，变量定义后即需要内存空间，而内存空间则为其分配好后，内存单元的编号即是地址也就是指针。指针指向变量，指针的值是变量的起始地址。也就是说指针中存放的就是该变量的地址，该地址就是一个内存单元的编号，为一个16进制数字。  而变量中存在的则是提前定义好的数值。下面举例：\\ne.g.\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-c extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-c\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"short\")]),_vm._v(\" a\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// short占2个字节(16bit)\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" b\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"20\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"   \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// int占4个字节(32bit)\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"float\")]),_vm._v(\" c\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"20.00\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// float占4个字节(32bit)\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"char\")]),_vm._v(\" d\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'A'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"  \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// char占1个字节(8bit)\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"int\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\"p\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\np \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&\")]),_vm._v(\"b\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"//指针变量p指向了整型变量b\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"如图：\\n\"),_c('img',{attrs:{\"src\":require(\"./img/pointer.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"指针的运算\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#指针的运算\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 指针的运算\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"指针运算是以指针变量所存放的地址量作为运算量而进行的运算。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"指针运算的实质就是地址的计算\")]),_vm._v(\" \"),_c('li',[_vm._v(\"指针运算的种类是有限的，它只能进行赋值运算，算术运算和关系运算。\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"指针关系运算\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#指针关系运算\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 指针关系运算\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"两指针之间的关系运算表示它们指向的地址位置之间的关系。指向地址打的指针大于指向地址小的指针。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"指针与一般整数变量之间的关系运算没有意义。但可以和零进行等于或不等于的关系运算，判断指针是否为空。\")])])])}]\n\nexport { render, staticRenderFns }"]}