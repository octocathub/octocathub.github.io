{"remainingRequest":"/home/bingyu/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/bingyu/vue/node_modules/vue-loader/lib/index.js??ref--1-1!/home/bingyu/vue/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/bingyu/vue/docs/4-Github/4-2-Git.md?vue&type=template&id=67acb98c&","dependencies":[{"path":"/home/bingyu/vue/docs/4-Github/4-2-Git.md","mtime":1549619754351},{"path":"/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"git操作指南\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#git操作指南\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Git操作指南\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"下载github分支上的文件\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#下载github分支上的文件\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 下载GitHub分支上的文件\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"默认的我们会下载master分支上的文件，但是由于有可能还会存在其他的分支，甚至其他分支上的文件与主分支上的文件大相径庭，所以我们可以这样操作clone\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" clone -b branch_name URL.git\\n\")])])]),_c('h3',{attrs:{\"id\":\"切换分支，并提交文件\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#切换分支，并提交文件\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 切换分支，并提交文件\")]),_vm._v(\" \"),_c('p',[_vm._v(\"创建新分支\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" branch -c branch_name\\n\")])])]),_c('p',[_vm._v(\"切换到新分支\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" checkout branch_name\\n\")])])]),_c('p',[_vm._v(\"列出所有分支\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" branch -a\\n\")])])]),_c('p',[_vm._v(\"合并分支\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"切换到master(主分支)\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" checkout master\\n\")])])]),_c('ol',{attrs:{\"start\":\"2\"}},[_c('li',[_vm._v(\"合并新分支(子分支)\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" merge --no-ff branch_name\\n\")])])]),_c('ol',{attrs:{\"start\":\"3\"}},[_c('li',[_vm._v(\"提交注释\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -am \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"merage affect REAMD.md\\\"\")]),_vm._v(\"\\n\")])])]),_c('ol',{attrs:{\"start\":\"4\"}},[_c('li',[_vm._v(\"上传更新\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" push\\n\")])])]),_c('h3',{attrs:{\"id\":\"git-clone-的参数depth-1有什么用？\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#git-clone-的参数depth-1有什么用？\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" git clone 的参数depth=1有什么用？\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"depth用于指定克隆深度，为1即表示只克隆最近一次commit.\\n这种方法克隆的项目只包含最近的一次commit的一个分支，体积很小，即可解决文章开头提到的项目过大导致Timeout的问题，但会产生另外一个问题，他只会把默认分支clone下来，其他远程分支并不在本地，所以这种情况下，需要用如下方法拉取其他分支：\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git clone --depth 1 https://github.com/username/xxxxxxx.git\\n$ git remote set-branches origin 'remote_branch_name'\\n$ git fetch --depth 1 origin remote_branch_name\\n$ git checkout remote_branch_name\\n\")])])])])}]\n\nexport { render, staticRenderFns }"]}