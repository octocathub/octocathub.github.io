{"remainingRequest":"/home/bingyu/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/bingyu/vue/node_modules/vue-loader/lib/index.js??ref--1-1!/home/bingyu/vue/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/bingyu/vue/docs/4-Github/4-2-Git.md?vue&type=template&id=67acb98c&","dependencies":[{"path":"/home/bingyu/vue/docs/4-Github/4-2-Git.md","mtime":1549619754351},{"path":"/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/bingyu/vue/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"git操作指南\\\"><a href=\\\"#git操作指南\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Git操作指南</h1> <h3 id=\\\"下载github分支上的文件\\\"><a href=\\\"#下载github分支上的文件\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 下载GitHub分支上的文件</h3> <ul><li>默认的我们会下载master分支上的文件，但是由于有可能还会存在其他的分支，甚至其他分支上的文件与主分支上的文件大相径庭，所以我们可以这样操作clone</li></ul> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> clone -b branch_name URL.git\\n</code></pre></div><h3 id=\\\"切换分支，并提交文件\\\"><a href=\\\"#切换分支，并提交文件\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 切换分支，并提交文件</h3> <p>创建新分支</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> branch -c branch_name\\n</code></pre></div><p>切换到新分支</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> checkout branch_name\\n</code></pre></div><p>列出所有分支</p> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> branch -a\\n</code></pre></div><p>合并分支</p> <ol><li>切换到master(主分支)</li></ol> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> checkout master\\n</code></pre></div><ol start=\\\"2\\\"><li>合并新分支(子分支)</li></ol> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> merge --no-ff branch_name\\n</code></pre></div><ol start=\\\"3\\\"><li>提交注释</li></ol> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> commit -am <span class=\\\"token string\\\">&quot;merage affect REAMD.md&quot;</span>\\n</code></pre></div><ol start=\\\"4\\\"><li>上传更新</li></ol> <div class=\\\"language-bash extra-class\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">git</span> push\\n</code></pre></div><h3 id=\\\"git-clone-的参数depth-1有什么用？\\\"><a href=\\\"#git-clone-的参数depth-1有什么用？\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> git clone 的参数depth=1有什么用？</h3> <ul><li>depth用于指定克隆深度，为1即表示只克隆最近一次commit.\\n这种方法克隆的项目只包含最近的一次commit的一个分支，体积很小，即可解决文章开头提到的项目过大导致Timeout的问题，但会产生另外一个问题，他只会把默认分支clone下来，其他远程分支并不在本地，所以这种情况下，需要用如下方法拉取其他分支：</li></ul> <div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>$ git clone --depth 1 https://github.com/username/xxxxxxx.git\\n$ git remote set-branches origin 'remote_branch_name'\\n$ git fetch --depth 1 origin remote_branch_name\\n$ git checkout remote_branch_name\\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}