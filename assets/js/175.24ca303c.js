(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{599:function(t,a,n){"use strict";n.r(a);var s=n(13),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"分组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),n("h2",{attrs:{id:"概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),n("p",[t._v("数据库系统根据列值将行进行分组，它将根据不同的列值建立多个子集，这样就可以计算每组的聚合值。")]),t._v(" "),n("h2",{attrs:{id:"使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),n("h2",{attrs:{id:"聚合函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),n("p",[t._v("count函数")]),t._v(" "),n("ul",[n("li",[t._v("count(*)，用于处理结果集中的行")]),t._v(" "),n("li",[t._v("count(值表达式)，处理值表达式返回的值")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("计算总行数\ncount(*) 计算结果集中的总行数，包括重复的行和包含null值的行。")])]),t._v(" "),n("li",[n("p",[t._v("计算列中值的个数或表达式返回的值的个数")])])]),t._v(" "),n("p",[t._v("count(column_name) 查找出非null值")]),t._v(" "),n("p",[t._v("count(distinct column_name) 查找出非null和不重复的值")]),t._v(" "),n("p",[n("strong",[t._v("分组最重要的是按照什么条件进行过滤分组？")])])])}),[],!1,null,null,null);a.default=r.exports}}]);