(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{517:function(e,t,n){"use strict";n.r(t);var s=n(19),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"sql优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[e._v("#")]),e._v(" sql优化")]),e._v(" "),n("h2",{attrs:{id:"explain返回列简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#explain返回列简介"}},[e._v("#")]),e._v(" explain返回列简介")]),e._v(" "),n("p",[e._v("1、type常用关键字")]),e._v(" "),n("p",[e._v("system > const > eq_ref > ref > range > index > all。")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("system：表仅有一行，基本用不到；")])]),e._v(" "),n("li",[n("p",[e._v("const：表最多一行数据配合，主键查询时触发较多；")])]),e._v(" "),n("li",[n("p",[e._v("eq_ref：对于每个来自于前面的表的行组合，从该表中读取一行。这可能是最好的联接类型，除了const类型；")])]),e._v(" "),n("li",[n("p",[e._v("ref：对于每个来自于前面的表的行组合，所有有匹配索引值的行将从这张表中读取；")])]),e._v(" "),n("li",[n("p",[e._v("range：只检索给定范围的行，使用一个索引来选择行。当使用=、<>、>、>=、<、<=、IS NULL、<=>、BETWEEN或者IN操作符，用常量比较关键字列时，可以使用range；")])]),e._v(" "),n("li",[n("p",[e._v("index：该联接类型与ALL相同，除了只有索引树被扫描。这通常比ALL快，因为索引文件通常比数据文件小；")])]),e._v(" "),n("li",[n("p",[e._v("all：全表扫描；")])])]),e._v(" "),n("p",[e._v("实际sql优化中，最后达到ref或range级别。")]),e._v(" "),n("p",[e._v("2、Extra常用关键字\nUsing index：只从索引树中获取信息，而不需要回表查询；\nUsing temporary：mysql常建一个临时表来容纳结果，典型情况如查询包含可以按不同情况列出列的GROUP BY和ORDER BY子句时；\nUsing where：WHERE子句用于限制哪一个行匹配下一个表或发送到客户。除非你专门从表中索取或检查所有行，如果Extra值不为Using where并且表联接类型为ALL或index，查询可能会有一些错误。需要回表查询。")])])}),[],!1,null,null,null);t.default=r.exports}}]);