(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{452:function(a,t,s){"use strict";s.r(t);var n=s(19),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"spring-data-jpa详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-data-jpa详解"}},[a._v("#")]),a._v(" Spring-data-jpa详解")]),a._v(" "),s("h2",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[a._v("#")]),a._v(" 注解")]),a._v(" "),s("h3",{attrs:{id:"onetomanyy和-manytoone注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#onetomanyy和-manytoone注解"}},[a._v("#")]),a._v(" @OneToManyy和@ManyToOne注解")]),a._v(" "),s("p",[a._v("两个对象存在一对多或多对一的关系。如何在程序在表明这两个对象的关系，以及如何利用这种关系优雅地使用它们。其实，在javax.persistence包下有这样两个注解——@OneTomany和@ManyToOne，可以为我们所用。")]),a._v(" "),s("p",[a._v('@OneToMany(cascade = {CascadeType.REFRESH, CascadeType.PERSIST,\nCascadeType.MERGE}, mappedBy = "father")')]),a._v(" "),s("p",[a._v("示例:")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@OneToMany")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cascade "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CascadeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("REFRESH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CascadeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PERSIST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CascadeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MERGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" mappedBy "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"father"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@OrderBy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"seqNum ASC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Chapter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),s("p",[a._v('@ManyToOne(cascade = { CascadeType.REFRESH, CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY)\n@JoinColumn(name = "FATHER_ID")\n示例：')]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ManyToOne")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cascade "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CascadeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("REFRESH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CascadeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PERSIST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CascadeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MERGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fetch "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FetchType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LAZY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@JoinColumn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"COURSE_ID"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" nullable "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Course")]),a._v(" course"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("@Transient")])])}),[],!1,null,null,null);t.default=e.exports}}]);