(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{628:function(s,t,a){"use strict";a.r(t);var e=a(13),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"基本操作指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作指令"}},[s._v("#")]),s._v(" 基本操作指令")]),s._v(" "),a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),a("p",[s._v("设置值\nset key value")]),s._v(" "),a("p",[s._v('set number "10086"')]),s._v(" "),a("p",[s._v("redis数据库是无序的方式存放数据库键的，一个新加入的键可能会出现在数据库的任何位置上。")]),s._v(" "),a("p",[s._v("对一个已经存在的键设置值，会覆盖掉旧值。")]),s._v(" "),a("p",[s._v("set key value [NX|XX]")]),s._v(" "),a("p",[s._v("如果给定NX选项，set命令只会在键没值的情况下执行设置操作；如果键已经存在，那么set命令将放弃执行设置操作，并发挥空值nil表示设置失败。\n如果给定XX选项，set命令只会在键有值的情况下执行设置操作；如果键没有值，那么set命令将放弃执行设置操作，并发挥空值nil表示设置失败。")]),s._v(" "),a("p",[s._v("获取键值")]),s._v(" "),a("p",[s._v("get key")]),s._v(" "),a("p",[s._v('get number\n"10086"')]),s._v(" "),a("p",[s._v("如果给定的键在数据库中没有与之相关联的值，那么get命令将返回一个空值：\nget date\n(nil)")]),s._v(" "),a("h2",{attrs:{id:"getset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getset"}},[s._v("#")]),s._v(" getset")]),s._v(" "),a("p",[s._v("getset首先获取字符串键目前已有的值，接着为键设置新值。最后把之前获取到的旧值返回给用户：")]),s._v(" "),a("p",[s._v("getset key new_value")]),s._v(" "),a("p",[s._v('get number\n"10086"\ngetset number "123456"\n"10086" -- 返回旧值')]),s._v(" "),a("p",[s._v("如果被设置的键并不存在于数据库，那么getset命令将返回空值作为键的旧值。")]),s._v(" "),a("h2",{attrs:{id:"mset-一次为多个字符串键设置值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mset-一次为多个字符串键设置值"}},[s._v("#")]),s._v(" mset： 一次为多个字符串键设置值")]),s._v(" "),a("p",[s._v("mset key value [key value ...]")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mset message "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10086"')]),s._v("  \n")])])]),a("p",[s._v("mset命令可以有效地提高程序的效率。因为执行多条set命令需要客户端和服务器之间进行多次网络通信，并因此耗费大量的时间。而使用一条mset命令去代替多条set命令只需要一次网络通信，从而可以减少程序执行多个设置操作时的时间。")]),s._v(" "),a("h2",{attrs:{id:"mget-一次获取多个字符串建的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mget-一次获取多个字符串建的值"}},[s._v("#")]),s._v(" mget：一次获取多个字符串建的值")]),s._v(" "),a("p",[s._v("mget key [key...]")]),s._v(" "),a("p",[s._v("mget返回一个列表作为结果，这个列表按照用户执行命令时给定键的顺序排列各个键的值。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mget message number  \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10086"')]),s._v("\n")])])]),a("p",[s._v("mget命令可以将多个获取操作所需的网络通信次数从原来的N次降至一次，从而有效地提高程序的运行效率.")]),s._v(" "),a("h2",{attrs:{id:"msetnx-只在键不存在的情况下-一次为多个字符串设置值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#msetnx-只在键不存在的情况下-一次为多个字符串设置值"}},[s._v("#")]),s._v(" msetnx: 只在键不存在的情况下,一次为多个字符串设置值")]),s._v(" "),a("p",[s._v("msetnx命令与mset命令一样,都可以对多个字符串键进行设置:")]),s._v(" "),a("p",[s._v("msetnx key value [key value ...]")]),s._v(" "),a("p",[s._v("msetnx命令与mset的主要区别在于,msetnx只会在所有给定键不存在的情况下对键进行设置,而不会像mset那样直接覆盖已有的值.\n如果在给定值当中,即使有一个键已经有值了,那么msetnx命令也会放弃对所有给定键的设置操作.")]),s._v(" "),a("h2",{attrs:{id:"strlen-获取字符串值的字节长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strlen-获取字符串值的字节长度"}},[s._v("#")]),s._v(" strlen: 获取字符串值的字节长度")]),s._v(" "),a("p",[s._v("strlen key")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" strlen number  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" \n")])])]),a("p",[s._v("对于不存在的键,stelen命令将返回0.")]),s._v(" "),a("h2",{attrs:{id:"getrange-获取字符串值指定索引范围上的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getrange-获取字符串值指定索引范围上的内容"}},[s._v("#")]),s._v(" getrange: 获取字符串值指定索引范围上的内容")]),s._v(" "),a("p",[s._v("getrange key start end")]),s._v(" "),a("p",[s._v("getrange命令接受的是闭区间索引范围,也就是说,位于start索引和end索引上的值也会被包含在命令返回的内容当中.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" getrange message "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" \n\ngetrange message "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),s._v(" \n")])])]),a("h2",{attrs:{id:"setrange-对字符串值的指定索引范围进行设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setrange-对字符串值的指定索引范围进行设置"}},[s._v("#")]),s._v(" setrange: 对字符串值的指定索引范围进行设置")]),s._v(" "),a("p",[s._v("通过使用setrange命令,可以将字符串键的值从索引index开始的部门替换为指定的内容,被替换内容的长度取决于新内容的长度.")]),s._v(" "),a("p",[s._v("setrange key index substitute")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get message\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" setrange message "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get message \n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello redis"')]),s._v("\n")])])]),a("h2",{attrs:{id:"append-追加新内容到值的末尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#append-追加新内容到值的末尾"}},[s._v("#")]),s._v(" append: 追加新内容到值的末尾")]),s._v(" "),a("p",[s._v("将给定的内容追加到字符串键已有值的末尾：\nappend key suffix\n执行完追加操作之后，会返回字符串值当前的长度作为命令的返回值。")]),s._v(" "),a("p",[s._v('append description "is a database"')]),s._v(" "),a("h3",{attrs:{id:"处理不存在的键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理不存在的键"}},[s._v("#")]),s._v(" 处理不存在的键")]),s._v(" "),a("p",[s._v("如果用户给定的键并不存在，那么append命令会将键的值初始化为空字符串，然后再执行追加操作。")]),s._v(" "),a("p",[s._v("使用场景： 存储日志")]),s._v(" "),a("h2",{attrs:{id:"incrby、decrby-对整数值执行加法操作和减法操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#incrby、decrby-对整数值执行加法操作和减法操作"}},[s._v("#")]),s._v(" INCRBY、DECRBY：对整数值执行加法操作和减法操作")]),s._v(" "),a("p",[s._v("当字符串键存储的值能够被Redis解释为整数时，用户就可以通过INCRBY命令和DECRBY命令对被存储的整数值执行加法或减法操作。INCRBY命令用于为整数值加上指定的整数增量，并返回键在执行加法操作之后的值：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("incrby key increment   \n")])])]),a("p",[s._v("与INCRBY命令的作用正好相反，DECRBY命令用于为整数值减去指定的整数减量，并返回键在执行减法操作之后的值:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("decrby key increment   \n")])])]),a("p",[s._v("另外需要注意的一点是，INCRBY和DECRBY的增量和减量也必须能够被Redis解释为整数，使用其他类型的值作为增量或减量将返回一个错误。")]),s._v(" "),a("p",[s._v("处理不存在的键当INCRBY命令或DECRBY命令遇到不存在的键时，命令会先将键的值初始化为0，然后再执行相应的加法操作或减法操作。")]),s._v(" "),a("h2",{attrs:{id:"incr、decr-对整数值执行加1操作和减1操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#incr、decr-对整数值执行加1操作和减1操作"}},[s._v("#")]),s._v(" INCR、DECR：对整数值执行加1操作和减1操作")]),s._v(" "),a("p",[s._v("因为对整数值执行加1操作或减1操作的场景经常会出现，所以为了能够更方便地执行这两个操作，Redis分别提供了用于执行加1操作的INCR命令以及用于执行减1操作的DECR命令。INCR命令的作用就是将字符串键存储的整数值加上1，效果相当于执行INCRBY key 1：")]),s._v(" "),a("p",[s._v("incr key")]),s._v(" "),a("p",[s._v("ECR命令的作用就是将字符串键存储的整数值减去1，效果相当于执行DECRBY key 1：")]),s._v(" "),a("p",[s._v("DECR key")]),s._v(" "),a("p",[s._v("使用场景 ： 生成id，或者 计数器")]),s._v(" "),a("h1",{attrs:{id:"散列-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#散列-hash"}},[s._v("#")]),s._v(" 散列---hash")]),s._v(" "),a("p",[s._v("把相关联的数据打包起来存储的数据结构，而这种数据结构就是散列（hash）键。")]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("Redis的散列键会将一个键和一个散列在数据库里关联起来，用户可以在散列中为任意多个字段（f ield）设置值。与字符串键一样，散列的字段和值既可以是文本数据，也可以是二进制数据。通过使用散列键，用户可以把相关联的多项数据存储到同一个散列里面，以便对这些数据进行管理，或者针对它们执行批量操作。")]),s._v(" "),a("h2",{attrs:{id:"hset-为字段设置值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hset-为字段设置值"}},[s._v("#")]),s._v(" HSET: 为字段设置值")]),s._v(" "),a("p",[s._v("HSET hash field value")]),s._v(" "),a("ul",[a("li",[s._v("如果给定的字段并不存在于散列中，那么这次设置就是一次性创建操作，命令将在散列里面关联给定的字段和值。返回1")]),s._v(" "),a("li",[s._v("如果给定的字段原本以及存在于散列里，那么这次设置就是一次更新操作，将覆盖旧值。返回0")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" hset article::10086 title "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" hset article::10086 content "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("散列中包含的字段就像数据库包含的键一样，在实际中都是以无序方式进行排列的。")])]),s._v(" "),a("h2",{attrs:{id:"hsetnx-只在字段不存在的情况下为他设置值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hsetnx-只在字段不存在的情况下为他设置值"}},[s._v("#")]),s._v(" HSETNX: 只在字段不存在的情况下为他设置值")]),s._v(" "),a("p",[s._v("HSETNX hash field value\nHSETNX 命令在字段不存在并且成功为他设置值时返回1，在字段已经存在并导致设置操作未能成功执行时返回0.")]),s._v(" "),a("h2",{attrs:{id:"hget-获取字段的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hget-获取字段的值"}},[s._v("#")]),s._v(" HGET: 获取字段的值")]),s._v(" "),a("p",[s._v("HGET hash field")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HGET article::10086 title\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),s._v("\n")])])]),a("p",[s._v("如果用户给定的字段并不存在于散列当中或者不存在该散列，那么HGET命令将返回一个空值。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HGET article::10086 location\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"hstrlen-获取字段值的字节长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hstrlen-获取字段值的字节长度"}},[s._v("#")]),s._v(" HSTRLEN：获取字段值的字节长度")]),s._v(" "),a("p",[s._v("HSTRLEN hash field")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HSTRLEN article::10086 title\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])])]),a("p",[s._v("如果用户给定的字段并不存在于散列当中或者不存在该散列，那么HGET命令将返回一个0.")]),s._v(" "),a("h2",{attrs:{id:"hexists-检查字段是否存在于散列中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hexists-检查字段是否存在于散列中"}},[s._v("#")]),s._v(" HEXISTS：检查字段是否存在于散列中")]),s._v(" "),a("p",[s._v("HEXISTS hash field\n如果散列包含了给定的字段，那么命令返回1，否则命令返回0.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HEXISTS article::10086 title\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HEXISTS article::10086 author\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("h2",{attrs:{id:"hdel-删除字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hdel-删除字段"}},[s._v("#")]),s._v(" HDEL：删除字段")]),s._v(" "),a("p",[s._v("HDEL命令用于删除散列中的指定字段及其相关联的值")]),s._v(" "),a("p",[s._v("HDEL hash field")]),s._v(" "),a("p",[s._v("当给定字段存在于散列中并且被成功删除时，命令返回1；如果给定字段并不存在于散列中，或者给定的散列并不存在，那么命令将返回0表示删除失败。")]),s._v(" "),a("h2",{attrs:{id:"hlen-获取散列包含的字段数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hlen-获取散列包含的字段数量"}},[s._v("#")]),s._v(" HLEN：获取散列包含的字段数量")]),s._v(" "),a("p",[s._v("HLEN hash")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HLEN article::10086\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),a("p",[s._v("如果给定的散列不存在。那么返回0")]),s._v(" "),a("h2",{attrs:{id:"hmset-一次为多个字段设置值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmset-一次为多个字段设置值"}},[s._v("#")]),s._v(" HMSET：一次为多个字段设置值")]),s._v(" "),a("p",[s._v("HMSET hash field value [field value ...]")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("HMSET article::10086 title "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" content "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloredis"')]),s._v(" \n")])])]),a("h2",{attrs:{id:"hmget-一次获取多个字段的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmget-一次获取多个字段的值"}},[s._v("#")]),s._v(" HMGET：一次获取多个字段的值")]),s._v(" "),a("p",[s._v("HMGET hash field [field ...]")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("HMGET article::10086 title  content \n")])])]),a("h2",{attrs:{id:"hkeys-hvals-hgetall-获取所有字段-所有值-所有字段和值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hkeys-hvals-hgetall-获取所有字段-所有值-所有字段和值"}},[s._v("#")]),s._v(" HKEYS,HVALS,HGETALL: 获取所有字段，所有值，所有字段和值")]),s._v(" "),a("p",[s._v("HKEYS hash\nHVALS hash\nHGETALL hash")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" HKEYS article::10086\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"title"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),s._v("\n")])])]),a("h1",{attrs:{id:"列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[s._v("#")]),s._v(" 列表")]),s._v(" "),a("p",[s._v("list时一种线性有序的结构，可以按照元素被推入到列表中的顺序来存储元素，列表中的元素可以重复。")]),s._v(" "),a("h2",{attrs:{id:"lpush-将元素推入列表左端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lpush-将元素推入列表左端"}},[s._v("#")]),s._v(" LPUSH: 将元素推入列表左端")]),s._v(" "),a("p",[s._v("LPUSH list item [item item ...]")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LPUSH todo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"watch"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),a("h2",{attrs:{id:"rpush-将元素推入列表右端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpush-将元素推入列表右端"}},[s._v("#")]),s._v(" RPUSH: 将元素推入列表右端")]),s._v(" "),a("p",[s._v("RPUSH list item [item item ...]")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" RPUSH todo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"watch"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),a("h2",{attrs:{id:"lpushx-rpushx-只对已存在的列表执行推入操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lpushx-rpushx-只对已存在的列表执行推入操作"}},[s._v("#")]),s._v(" LPUSHX,RPUSHX: 只对已存在的列表执行推入操作")]),s._v(" "),a("p",[s._v("注意： 与LPUSH,RPUSH 命令不一样的地方，LPUSHX,RPUSHX命令每次只能推入一个元素。尝试向\nLPUSHX或RPUSHX命令给定多个元素将引发错误。")]),s._v(" "),a("h2",{attrs:{id:"lpop-弹出-移除列表最左端的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lpop-弹出-移除列表最左端的元素"}},[s._v("#")]),s._v(" LPOP： 弹出/移除列表最左端的元素")]),s._v(" "),a("p",[s._v("返回值为被移除的元素。")]),s._v(" "),a("p",[s._v("LPOP list")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LPOP todo\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"watch"')]),s._v("\n")])])]),a("h2",{attrs:{id:"rpop-弹出-移除列表最右端的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpop-弹出-移除列表最右端的元素"}},[s._v("#")]),s._v(" RPOP： 弹出/移除列表最右端的元素")]),s._v(" "),a("p",[s._v("返回值为被移除的元素。")]),s._v(" "),a("p",[s._v("RPOP list")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" RPOP todo\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v("\n")])])]),a("h2",{attrs:{id:"rpoplpush-将右端弹出的元素推入左端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpoplpush-将右端弹出的元素推入左端"}},[s._v("#")]),s._v(" RPOPLPUSH: 将右端弹出的元素推入左端")]),s._v(" "),a("p",[s._v("RPOPLPUSH source target")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("RPOPLPUSH todo todo \n")])])]),a("h2",{attrs:{id:"llen-获取列表的长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#llen-获取列表的长度"}},[s._v("#")]),s._v(" LLEN：获取列表的长度")]),s._v(" "),a("p",[s._v("LLEN list")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("LLEN todo\n")])])]),a("h2",{attrs:{id:"lindex-获取指定索引上的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lindex-获取指定索引上的元素"}},[s._v("#")]),s._v(" LINDEX: 获取指定索引上的元素")]),s._v(" "),a("p",[s._v("LINDEX list index")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("LINDEX todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" \n")])])]),a("h2",{attrs:{id:"lrange-获取指定索引范围上的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lrange-获取指定索引范围上的元素"}},[s._v("#")]),s._v(" LRANGE： 获取指定索引范围上的元素")]),s._v(" "),a("p",[s._v("LRANGE list start end")]),s._v(" "),a("p",[s._v("LRANGE命令接受一个列表，一个开始索引和一个结束索引作为参数，然后依次返回列表从开始索引到结束索引范围内的所有元素，其中开始索引和结束索引对应的元素也会被包含在命令返回的元素当中。")]),s._v(" "),a("p",[s._v("LRANGE todo 1 2")]),s._v(" "),a("p",[s._v("获取列表包含的所有元素： LRANGE todo 0-1")]),s._v(" "),a("p",[s._v("该命令可以实现分页操作。")]),s._v(" "),a("h2",{attrs:{id:"lset-为指定索引设置新元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lset-为指定索引设置新元素"}},[s._v("#")]),s._v(" LSET: 为指定索引设置新元素")]),s._v(" "),a("p",[s._v("LSET list index new_element")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slepp"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"watch"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LSET todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shop"')]),s._v("\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slepp"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shop"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" \n")])])]),a("p",[s._v("该命令只能针对列表中已存在的索引进行设置，如果用户给定的索引超出了列表的有效索引范围。则报错：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LSET todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shop"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR index out of range\n")])])]),a("h2",{attrs:{id:"linsert-将元素插入列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linsert-将元素插入列表"}},[s._v("#")]),s._v(" LINSERT： 将元素插入列表")]),s._v(" "),a("p",[s._v("LINSERT list BEFORE|AFTER  target_element new_element")]),s._v(" "),a("p",[s._v("LINSERT命令第二个参数的值可以是BEFORE或AFTER，他们分别用于指示命令将新元素插入目标元素的前面或者后面。命令完成后返回列表当前的长度。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LINSERT todo BEFORE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shop"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10086"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slepp"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10086"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shop"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v("\n")])])]),a("p",[s._v("处理不存在的元素：LINSERT命令要求用户给定的目标元素必须已存在于列表当中。如果目标元素不存在于列表中，那么将返回-1表示插入失败。")]),s._v(" "),a("h2",{attrs:{id:"ltrim-修剪列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ltrim-修剪列表"}},[s._v("#")]),s._v(" LTRIM：修剪列表")]),s._v(" "),a("p",[s._v("LTRIM命令接受一个列表和一个索引范围作为参数，并移除列表中位于给定索引范围之外的所有元素，只保留给定范围之内的元素：")]),s._v(" "),a("p",[s._v("LTRIM list start end")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slepp"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10086"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shop"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"buy"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LTRIM todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE todo "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slepp"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10086"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(' "shop\n')])])]),a("p",[s._v("该命令可以处理负数索引")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LTRIM todo -5 -1\nOK\n")])])]),a("h2",{attrs:{id:"lrem-从列表中移除指定元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lrem-从列表中移除指定元素"}},[s._v("#")]),s._v(" LREM: 从列表中移除指定元素")]),s._v(" "),a("p",[s._v("LREM list count element")]),s._v(" "),a("p",[s._v("count参数的值决定了LREM命令移除元素的方式：")]),s._v(" "),a("ul",[a("li",[s._v("如果count参数的值等于0，那么LREM命令将移除列表中包含的所有指定元素。")]),s._v(" "),a("li",[s._v("如果count参数的值大于0，那么LREM命令将从列表的左端开始向右进行检查，并移除最先发现的count个指定元素。")]),s._v(" "),a("li",[s._v("如果count参数的值小于0，那么LREM命令将从列表的右端开始向左进行检查，并移除最先发现的abs(count)个指定元素(abs(count)即count的绝对值)。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LPUSH sample "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE sample "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LREM sample "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE sample "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LREM sample "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LRANGE sample "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),s._v("\n\n\n")])])]),a("h2",{attrs:{id:"blpop-阻塞式左端弹出操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blpop-阻塞式左端弹出操作"}},[s._v("#")]),s._v(" BLPOP : 阻塞式左端弹出操作")]),s._v(" "),a("h2",{attrs:{id:"brpop-阻塞式右端弹出操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brpop-阻塞式右端弹出操作"}},[s._v("#")]),s._v(" BRPOP : 阻塞式右端弹出操作")]),s._v(" "),a("h2",{attrs:{id:"brpoplpush-阻塞式弹出并推入操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brpoplpush-阻塞式弹出并推入操作"}},[s._v("#")]),s._v(" BRPOPLPUSH： 阻塞式弹出并推入操作")]),s._v(" "),a("h1",{attrs:{id:"集合-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合-set"}},[s._v("#")]),s._v(" 集合(set)")]),s._v(" "),a("p",[s._v("集合允许将任意多个不同的元素存储到集合中，这些元素既可以是文本数据，也可以是二进制数据.")]),s._v(" "),a("p",[s._v("集合与列表的区别:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("列表可以存储重复元素,而集合只会存储非重复元素,尝试将一个已存在的元素添加到集合将被忽略")])]),s._v(" "),a("li",[a("p",[s._v("列表以有序方式存储元素,而集合则以无序方式存储元素")])]),s._v(" "),a("li",[a("p",[s._v("在执行LINSERT LREM这样的列表命令时,即使命令只针对单个列表元素,程序有时也不得不遍历整个列表以确定指定的元素是否存在,因此这些命令的复杂度都为O(N).")])]),s._v(" "),a("li",[a("p",[s._v("对于集合来说,因为所有针对单个元素的集合命令都不需要遍历整个集合,所以复杂度都为O(1).")])])]),s._v(" "),a("p",[s._v("当我们需要存储多个元素时,就可以考虑这些元素是否可以以无序的方式存储,并且是否不会重复,如果是,那么就可以使用集合来存储这些元素,从而有效地利用集合操作的效率优势.")]),s._v(" "),a("h2",{attrs:{id:"sadd-将元素添加到集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sadd-将元素添加到集合"}},[s._v("#")]),s._v(" SADD: 将元素添加到集合")]),s._v(" "),a("p",[s._v("SADD set element [element...]")]),s._v(" "),a("p",[s._v("这个命令会返回成功添加的新元素数量作为返回值.")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SADD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[s._v("忽略已存在元素,sadd命令会自动忽略已存在的元素,只将不存在于集合的新元素添加到集合中.")]),s._v(" "),a("h2",{attrs:{id:"srem-从集合中移除元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#srem-从集合中移除元素"}},[s._v("#")]),s._v(" SREM : 从集合中移除元素")]),s._v(" "),a("p",[s._v("通过SREM命令,用户可以从集合中移除一个或多个已存在的元素.返回被移除的元素数量.")]),s._v(" "),a("p",[s._v("SREM set element [element...]")]),s._v(" "),a("p",[s._v("移除的时候会忽略不存在的元素,只移除那些确实存在的元素.")]),s._v(" "),a("h2",{attrs:{id:"smove-将元素从一个集合移动到另一个集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smove-将元素从一个集合移动到另一个集合"}},[s._v("#")]),s._v(" SMOVE: 将元素从一个集合移动到另一个集合")]),s._v(" "),a("p",[s._v("SMOVE source target element")]),s._v(" "),a("p",[s._v("在移动操作成功执行时返回1.如果指定的元素并不存在于源集合,那么SMOVE命令将返回0,表示移除操作执行失败.")]),s._v(" "),a("p",[s._v('SMOVE set nosql "redis"')]),s._v(" "),a("p",[s._v("如果想要移除的元素并不存在于源集合,那么SMOVE将放弃执行移动操作,并返回0表示移动操作执行失败.")]),s._v(" "),a("p",[s._v("覆盖已存在的元素:即使用户象要移动的元素已经存在于目标集合,SMOVE命令仍然会将指定的元素从源集合移动到目标集合,并覆盖目标集合中的相同元素.从结果来看,这种移动不会改变目标集合包含的元素,只会导致被移动的元素从源集合中消失.")]),s._v(" "),a("h2",{attrs:{id:"smembers-获取集合包含的所有元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smembers-获取集合包含的所有元素"}},[s._v("#")]),s._v(" SMEMBERS: 获取集合包含的所有元素")]),s._v(" "),a("p",[s._v("SMEMBERS set")]),s._v(" "),a("h2",{attrs:{id:"scard-获取集合包含的元素数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scard-获取集合包含的元素数量"}},[s._v("#")]),s._v(" SCARD: 获取集合包含的元素数量")]),s._v(" "),a("p",[s._v("用户可以获取给定集合的大小,即集合包含的元素数量:")]),s._v(" "),a("p",[s._v("SCARD set")]),s._v(" "),a("h2",{attrs:{id:"sismember-检查给定元素是否存在于集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sismember-检查给定元素是否存在于集合"}},[s._v("#")]),s._v(" SISMEMBER: 检查给定元素是否存在于集合")]),s._v(" "),a("p",[s._v("SISMEMBER set element")]),s._v(" "),a("p",[s._v("返回1表示给定的元素存在于集合当中,返回0表示给定的元素不存在于集合中.")]),s._v(" "),a("h2",{attrs:{id:"srandmember-随机获取集合中指定数量的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#srandmember-随机获取集合中指定数量的元素"}},[s._v("#")]),s._v(" SRANDMEMBER: 随机获取集合中指定数量的元素")]),s._v(" "),a("p",[s._v("SRANDMEMBER set [count]")]),s._v(" "),a("p",[s._v("可以指定count参数,即返回的元素数量.可以是正数也可以是负数.")]),s._v(" "),a("p",[s._v("当count参数的值大于集合包含的元素数量时,SRANDMEMBER命令将返回集合包含的所有元素.")]),s._v(" "),a("p",[s._v("使用场景: 抽奖")]),s._v(" "),a("h2",{attrs:{id:"spop-随机的从集合中移除指定数量的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spop-随机的从集合中移除指定数量的元素"}},[s._v("#")]),s._v(" SPOP: 随机的从集合中移除指定数量的元素")]),s._v(" "),a("p",[s._v("SPOP命令接收一个可选的count参数,用于指定需要被移除的元素数量.如果用户没有给定这个参数,那么SPOP默认值移除一个元素.")]),s._v(" "),a("p",[s._v("SPOP key [count]")]),s._v(" "),a("h2",{attrs:{id:"sinter-sinterstore-对集合执行交集操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sinter-sinterstore-对集合执行交集操作"}},[s._v("#")]),s._v(" SINTER,SINTERSTORE: 对集合执行交集操作")]),s._v(" "),a("p",[s._v("SINTER命令可以计算出用户给定的所有集合的元素,然后返回这个交集包含的所有元素:")]),s._v(" "),a("p",[s._v("SINTER set [set...]")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("SINTER set1 set2 \n")])])]),a("p",[s._v("SINTERSTORE命令可以把给定集合的交集计算结果存储到指定的键里面.")]),s._v(" "),a("p",[s._v("SINTERSTORE destination_key set [set...]")]),s._v(" "),a("h2",{attrs:{id:"sunion-sunionstore-对集合执行并集计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sunion-sunionstore-对集合执行并集计算"}},[s._v("#")]),s._v(" SUNION,SUNIONSTORE: 对集合执行并集计算")]),s._v(" "),a("p",[s._v("SUNION命令可以计算出用户给定的所有集合的并集,然后返回这个并集包含的所有元素:")]),s._v(" "),a("p",[s._v("SUNION set [set ...]")]),s._v(" "),a("p",[s._v("SUNIONSTORE命令可以吧给定集合的并集计算结果存储到指定的键中,并在键已经存在的情况下自动覆盖已有的键:")]),s._v(" "),a("p",[s._v("SUNIONSTORE destination_key set [set...]")]),s._v(" "),a("p",[s._v("SUNIONSTORE命令再执行完毕之后,将返回并集元素的数量作为返回值.")]),s._v(" "),a("h2",{attrs:{id:"sdiff-sdiffstore-对集合执行差集计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdiff-sdiffstore-对集合执行差集计算"}},[s._v("#")]),s._v(" SDIFF,SDIFFSTORE:对集合执行差集计算")]),s._v(" "),a("p",[s._v("SDIFF命令可以计算出给定集合之间的差集,并返回差集包含的所有元素:")]),s._v(" "),a("p",[s._v("SDIFF set [set...]")]),s._v(" "),a("p",[s._v("SDIFF命令会按照用户给定的集合顺序,从左到右依次对给定的集合执行差集计算.")]),s._v(" "),a("p",[s._v("SDIFF s1 s2 s3")]),s._v(" "),a("p",[s._v("SDIFFSTORE命令可以把给定集合之间的差集计算结果存储到指定的键中,并在键已存在的情况下自动覆盖已有的键.")]),s._v(" "),a("p",[s._v("SDIFFSTORE destination_key set [set...]")]),s._v(" "),a("h1",{attrs:{id:"有序集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序集合"}},[s._v("#")]),s._v(" 有序集合")])])}),[],!1,null,null,null);t.default=r.exports}}]);