(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{563:function(t,s,a){"use strict";a.r(s);var e=a(13),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"iptables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iptables"}},[t._v("#")]),t._v(" iptables")]),t._v(" "),a("p",[t._v("iptables = ip + tables\n所以就是ip的规则列表")]),t._v(" "),a("p",[t._v("iptables的结构：\niptables由上而下，由Tables，Chains，Rules组成。")]),t._v(" "),a("h2",{attrs:{id:"一、iptables的表tables与链chains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、iptables的表tables与链chains"}},[t._v("#")]),t._v(" 一、iptables的表tables与链chains")]),t._v(" "),a("p",[t._v("iptables有Filter, NAT, Mangle, Raw四种内建表：")]),t._v(" "),a("h3",{attrs:{id:"_1-filter表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-filter表"}},[t._v("#")]),t._v(" 1. Filter表")]),t._v(" "),a("p",[t._v("Filter是iptables的默认表，它有以下三种内建链(chains)：")]),t._v(" "),a("p",[t._v("INPUT链 – 处理来自外部的数据。")]),t._v(" "),a("p",[t._v("OUTPUT链 – 处理向外发送的数据。")]),t._v(" "),a("p",[t._v("FORWARD链 – 将数据转发到本机的其他网卡设备上。")]),t._v(" "),a("h3",{attrs:{id:"_2-nat表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-nat表"}},[t._v("#")]),t._v(" 2. NAT表")]),t._v(" "),a("p",[t._v("NAT表有三种内建链：")]),t._v(" "),a("p",[t._v("PREROUTING链 – 处理刚到达本机并在路由转发前的数据包。它会转换数据包中的目标IP地址（destination ip address），通常用于DNAT(destination NAT)。")]),t._v(" "),a("p",[t._v("POSTROUTING链 – 处理即将离开本机的数据包。它会转换数据包中的源IP地址（source ip address），通常用于SNAT（source NAT）。")]),t._v(" "),a("p",[t._v("OUTPUT链 – 处理本机产生的数据包。")]),t._v(" "),a("h3",{attrs:{id:"_3-mangle表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mangle表"}},[t._v("#")]),t._v(" 3. Mangle表")]),t._v(" "),a("p",[t._v("Mangle表用于指定如何处理数据包。它能改变TCP头中的QoS位。Mangle表具有5个内建链（chains）：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("PREROUTING")])]),t._v(" "),a("li",[a("p",[t._v("OUTPUT")])]),t._v(" "),a("li",[a("p",[t._v("FORWARD")])]),t._v(" "),a("li",[a("p",[t._v("INPUT")])]),t._v(" "),a("li",[a("p",[t._v("POSTROUTING")])])]),t._v(" "),a("h3",{attrs:{id:"_4-raw表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-raw表"}},[t._v("#")]),t._v(" 4. Raw表")]),t._v(" "),a("p",[t._v("Raw表用于处理异常，它具有2个内建链：")]),t._v(" "),a("ul",[a("li",[t._v("PREROUTING chain")]),t._v(" "),a("li",[t._v("OUTPUT chain")])]),t._v(" "),a("h2",{attrs:{id:"二、iptables-规则-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、iptables-规则-rules"}},[t._v("#")]),t._v(" 二、IPTABLES 规则(Rules)")]),t._v(" "),a("p",[t._v("规则的关键知识点：")]),t._v(" "),a("p",[t._v("Rules包括一个条件和一个目标(target)")]),t._v(" "),a("p",[t._v("如果满足条件，就执行目标(target)中的规则或者特定值。")]),t._v(" "),a("p",[t._v("如果不满足条件，就判断下一条Rules。")]),t._v(" "),a("p",[t._v("目标值（Target Values）")]),t._v(" "),a("p",[t._v("在target里指定的特殊值：")]),t._v(" "),a("p",[t._v("ACCEPT – 允许防火墙接收数据包")]),t._v(" "),a("p",[t._v("DROP – 防火墙丢弃包")]),t._v(" "),a("p",[t._v("QUEUE – 防火墙将数据包移交到用户空间")]),t._v(" "),a("p",[t._v("RETURN – 防火墙停止执行当前链中的后续Rules，并返回到调用链(the calling chain)中。")]),t._v(" "),a("p",[t._v("查看各表中的规则命令")]),t._v(" "),a("h1",{attrs:{id:"iptables-t-filter-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iptables-t-filter-list"}},[t._v("#")]),t._v(" iptables -t filter --list")]),t._v(" "),a("p",[t._v("查看mangle表：")]),t._v(" "),a("h1",{attrs:{id:"iptables-t-mangle-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iptables-t-mangle-list"}},[t._v("#")]),t._v(" iptables -t mangle --list")]),t._v(" "),a("p",[t._v("查看NAT表：")]),t._v(" "),a("h1",{attrs:{id:"iptables-t-nat-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iptables-t-nat-list"}},[t._v("#")]),t._v(" iptables -t nat --list")]),t._v(" "),a("p",[t._v("查看RAW表：")]),t._v(" "),a("h1",{attrs:{id:"iptables-t-raw-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iptables-t-raw-list"}},[t._v("#")]),t._v(" iptables -t raw --list")]),t._v(" "),a("p",[t._v("以下例子表明在filter表的input链, forward链, output链中存在规则：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# iptables --list")]),t._v("\nChain INPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnum  target     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    RH-Firewall-1-INPUT  all  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0\n\nChain FORWARD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnum  target     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    RH-Firewall-1-INPUT  all  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0\n\nChain OUTPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnum  target     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\n\nChain RH-Firewall-1-INPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" references"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnum  target     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    ACCEPT     all  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("    ACCEPT     icmp --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0           icmp "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("    ACCEPT     esp  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("    ACCEPT     ah   --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("    ACCEPT     udp  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("224.0")]),t._v(".0.251         udp dpt:5353\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("    ACCEPT     udp  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0           udp dpt:631\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("    ACCEPT     tcp  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0           tcp dpt:631\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("    ACCEPT     all  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0           state RELATED,ESTABLISHED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("    ACCEPT     tcp  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0           state NEW tcp dpt:22\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("   REJECT     all  --  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0/0           reject-with icmp-host-prohibited\n")])])]),a("p",[t._v("以上输出包含下列字段：")]),t._v(" "),a("p",[t._v("num – 指定链中的规则编号\ntarget – 前面提到的target的特殊值prot – 协议：tcp, udp, icmp等source – 数据包的源IP地址destination – 数据包的目标IP地址")]),t._v(" "),a("h2",{attrs:{id:"三、清空所有iptables规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、清空所有iptables规则"}},[t._v("#")]),t._v(" 三、清空所有iptables规则")]),t._v(" "),a("p",[t._v("在配置iptables之前，你通常需要用iptables --list命令或者iptables-save命令查看有无现存规则，因为有时需要删除现有的iptables规则：")]),t._v(" "),a("p",[t._v("iptables --flush\n或者\niptables -F\n下面命令是清除iptables nat表规则。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -t nat -F\n")])])]),a("h2",{attrs:{id:"四、永久生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、永久生效"}},[t._v("#")]),t._v(" 四、永久生效")]),t._v(" "),a("p",[t._v("当你删除、添加规则后，这些更改并不能永久生效，这些规则很有可能在系统重启后恢复原样。如下配置让配置永久生效。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存iptables规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" iptables save\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启iptables服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" iptables stop\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" iptables start\n")])])]),a("p",[t._v("查看当前规则：")]),t._v(" "),a("p",[t._v("cat  /etc/sysconfig/iptables")]),t._v(" "),a("h2",{attrs:{id:"五、追加iptables规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、追加iptables规则"}},[t._v("#")]),t._v(" 五、追加iptables规则")]),t._v(" "),a("p",[t._v("可以使用iptables -A命令追加新规则，其中-A表示Append。因此，新的规则将追加到链尾。\n一般而言，最后一条规则用于丢弃(DROP)所有数据包。如果你已经有这样的规则了，并且使用-A参数添加新规则，那么就是无用功。")]),t._v(" "),a("p",[t._v("1.语法\niptables -A chain firewall-rule\n-A chain – 指定要追加规则的链")]),t._v(" "),a("p",[t._v("firewall-rule – 具体的规则参数")]),t._v(" "),a("p",[t._v("2.描述规则的基本参数\n以下这些规则参数用于描述数据包的协议、源地址、目的地址、允许经过的网络接口，以及如何处理这些数据包。这些描述是对规则的基本描述。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("-p 协议（protocol）\n  指定规则的协议，如tcp, udp, icmp等，可以使用all来指定所有协议。\n  如果不指定-p参数，则默认是all值。这并不明智，请总是明确指定协议名称。\n  可以使用协议名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如tcp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，或者是协议值（比如6代表tcp）来指定协议。映射关系请查看/etc/protocols\n  还可以使用–protocol参数代替-p参数\n-s 源地址（source）\n  指定数据包的源地址\n  参数可以使IP地址、网络地址、主机名\n  例如：-s "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.101指定IP地址\n  例如：-s "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.10/24指定网络地址\n  如果不指定-s参数，就代表所有地址\n  还可以使用–src或者–source\n-d 目的地址（destination）\n  指定目的地址\n  参数和-s相同\n  还可以使用–dst或者–destination\n-j 执行目标（jump to target）\n  -j代表”jump to target”\n  -j指定了当与规则"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("匹配时如何处理数据包\n  可能的值是ACCEPT, DROP, QUEUE, RETURN\n  还可以指定其他链（Chain）作为目标\n-i 输入接口（input interface）\n  -i代表输入接口"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -i指定了要处理来自哪个接口的数据包\n    这些数据包即将进入INPUT, FORWARD, PREROUTE链\n  例如：-i eth0指定了要处理经由eth0进入的数据包\n  如果不指定-i参数，那么将处理进入所有接口的数据包\n  如果出现"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -i eth0，那么将处理所有经由eth0以外的接口进入的数据包\n  如果出现-i eth+，那么将处理所有经由eth开头的接口进入的数据包\n  还可以使用–in-interface参数\n-o 输出（out interface）\n  -o代表”output interface”\n  -o指定了数据包由哪个接口输出\n  这些数据包即将进入FORWARD, OUTPUT, POSTROUTING链\n  如果不指定-o选项，那么系统上的所有接口都可以作为输出接口\n  如果出现"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -o eth0，那么将从eth0以外的接口输出\n  如果出现-i eth+，那么将仅从eth开头的接口输出\n  还可以使用–out-interface参数\n\n")])])]),a("p",[t._v("3.描述规则的扩展参数\n对规则有了一个基本描述之后，有时候我们还希望指定端口、TCP标志、ICMP类型等内容。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("–sport 源端口（source port）针对 -p tcp 或者 -p udp\n  缺省情况下，将匹配所有端口\n  可以指定端口号或者端口名称，例如”–sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("″与”–sport ssh”。\n  /etc/services文件描述了上述映射关系。\n  从性能上讲，使用端口号更好\n  使用冒号可以匹配端口范围，如”–sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":100″\n  还可以使用”–source-port”\n–-dport 目的端口（destination port）针对-p tcp 或者 -p udp\n  参数和–sport类似\n  还可以使用”–destination-port”\n-–tcp-flags TCP标志 针对-p tcp\n  可以指定由逗号分隔的多个参数\n  有效值可以是：SYN, ACK, FIN, RST, URG, PSH\n  可以使用ALL或者NONE\n-–icmp-type ICMP类型 针对-p icmp\n  –icmp-type "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 表示Echo Reply\n  –icmp-type "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" 表示Echo\n")])])]),a("p",[t._v("4.追加规则的完整实例：仅允许SSH服务\n本例实现的规则将仅允许SSH数据包通过本地计算机，其他一切连接（包括ping）都将被拒绝。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.清空所有iptables规则")]),t._v("\niptables -F\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.接收目标端口为22的数据包")]),t._v("\niptables -A INPUT -i eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -j ACCEPT\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.拒绝所有其他数据包")]),t._v("\niptables -A INPUT -j DROP\n")])])]),a("h2",{attrs:{id:"六、更改默认策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、更改默认策略"}},[t._v("#")]),t._v(" 六、更改默认策略")]),t._v(" "),a("p",[t._v("上例的例子仅对接收的数据包过滤，而对于要发送出去的数据包却没有任何限制。本节主要介绍如何更改链策略，以改变链的行为。")]),t._v(" "),a("ol",[a("li",[t._v("默认链策略\n!警告：请勿在远程连接的服务器、虚拟机上测试！\n当我们使用-L选项验证当前规则是发现，所有的链旁边都有policy ACCEPT标注，这表明当前链的默认策略为ACCEPT：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# iptables -L")]),t._v("\nChain INPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\nACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh\nDROP       all  --  anywhere             anywhere            \n\nChain FORWARD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination         \n\nChain OUTPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\n")])])]),a("p",[t._v("这种情况下，如果没有明确添加DROP规则，那么默认情况下将采用ACCEPT策略进行过滤。除非：\na)为以上三个链单独添加DROP规则：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -A INPUT -j DROP\niptables -A OUTPUT -j DROP\niptables -A FORWARD -j DROP\n")])])]),a("p",[t._v("b)更改默认策略：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -P INPUT DROP\niptables -P OUTPUT DROP\niptables -P FORWARD DROP\n")])])]),a("p",[t._v("糟糕！！如果你严格按照上一节的例子配置了iptables，并且现在使用的是SSH进行连接的，那么会话恐怕已经被迫终止了！\n为什么呢？因为我们已经把OUTPUT链策略更改为DROP了。此时虽然服务器能接收数据，但是无法发送数据：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# iptables -L")]),t._v("\nChain INPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy DROP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\nACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh\nDROP       all  --  anywhere             anywhere            \n\nChain FORWARD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy DROP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination         \n\nChain OUTPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("policy DROP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarget     prot opt "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("               destination\n")])])]),a("h2",{attrs:{id:"七、配置应用程序规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、配置应用程序规则"}},[t._v("#")]),t._v(" 七、配置应用程序规则")]),t._v(" "),a("p",[t._v("尽管5.4节已经介绍了如何初步限制除SSH以外的其他连接，但是那是在链默认策略为ACCEPT的情况下实现的，并且没有对输出数据包进行限制。本节在上一节基础上，以SSH和HTTP所使用的端口为例，教大家如何在默认链策略为DROP的情况下，进行防火墙设置。在这里，我们将引进一种新的参数-m state，并检查数据包的状态字段。")]),t._v(" "),a("ol",[a("li",[t._v("SSH")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.允许接收远程主机的SSH请求")]),t._v("\niptables -A INPUT -i eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state NEW,ESTABLISHED -j ACCEPT\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.允许发送本地主机的SSH响应")]),t._v("\niptables -A OUTPUT -o eth0 -p tcp --sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state ESTABLISHED -j ACCEPT\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("-m state: 启用状态匹配模块（state matching module）\n\n–-state: 状态匹配模块的参数。当SSH客户端第一个数据包到达服务器时，状态字段为NEW；建立连接后数据包的状态字段都是ESTABLISHED\n\n–sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(": sshd监听22端口，同时也通过该端口和客户端建立连接、传送数据。因此对于SSH服务器而言，源端口就是22\n\n–dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(": ssh客户端程序可以从本机的随机端口与SSH服务器的22端口建立连接。因此对于SSH客户端而言，目的端口就是22\n")])])]),a("p",[t._v("如果服务器也需要使用SSH连接其他远程主机，则还需要增加以下配置：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.送出的数据包目的端口为22")]),t._v("\niptables -A OUTPUT -o eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state NEW,ESTABLISHED -j ACCEPT\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.接收的数据包源端口为22")]),t._v("\niptables -A INPUT -i eth0 -p tcp --sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state ESTABLISHED -j ACCEPT\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("HTTP\nHTTP的配置与SSH类似：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.允许接收远程主机的HTTP请求")]),t._v("\niptables -A INPUT -i eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" -m state --state NEW,ESTABLISHED -j ACCEPT\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.允许发送本地主机的HTTP响应")]),t._v("\niptables -A OUTPUT -o eth0 -p tcp --sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" -m state --state ESTABLISHED -j ACCEPT\n")])])]),a("p",[t._v("3.完整的配置")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.删除现有规则")]),t._v("\niptables -F\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.配置默认链策略")]),t._v("\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT DROP\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.允许远程主机进行SSH连接")]),t._v("\niptables -A INPUT -i eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A OUTPUT -o eth0 -p tcp --sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state ESTABLISHED -j ACCEPT\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.允许本地主机进行SSH连接")]),t._v("\niptables -A OUTPUT -o eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A INPUT -i eth0 -p tcp --sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -m state --state ESTABLISHED -j ACCEPT\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.允许HTTP请求")]),t._v("\niptables -A INPUT -i eth0 -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A OUTPUT -o eth0 -p tcp --sport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" -m state --state ESTABLISHED -j ACCEPT\n")])])]),a("p",[t._v("配置转发端口示例")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -t nat -I PREROUTING -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3389")]),t._v(" -j DNAT --to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("38")]),t._v(".X25.X.X02 \niptables -t nat -I POSTROUTING -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3389")]),t._v(" -j MASQUERADE\n")])])]),a("h2",{attrs:{id:"nat规则实战举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nat规则实战举例"}},[t._v("#")]),t._v(" NAT规则实战举例")]),t._v(" "),a("p",[t._v("需求: 把本地的mysql 3306端口映射出去变成63306，外面连接的语句是")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("mysql -uroot -p"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),t._v(" -h xxxxx -P "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63306")]),t._v("\n")])])]),a("p",[t._v("注：当访问63306的时候，会自动去请求3306，然后返回数据。")]),t._v(" "),a("p",[t._v("实现: 先允许数据包转发")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/proc/sys/net/ipv4/ip_forward\nsysctl -w net.ipv4.conf.eth0.route_localnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nsysctl -w net.ipv4.conf.default.route_localnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("nat规则")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -t nat -A PREROUTING -p tcp -m tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63306")]),t._v(" -j DNAT --to-destination "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:3306\niptables -t nat -A POSTROUTING -p tcp -m tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63306")]),t._v(" -j SNAT --to-source "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n")])])]),a("p",[t._v("注：这是允许所有外来的IP访问，慎用。")]),t._v(" "),a("p",[t._v("我们来做个ip限制，限制单个来源IP")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -t nat -R PREROUTING "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" -s "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".40.154 -p tcp -m tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63306")]),t._v(" -j DNAT --to-destination "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:3306\niptables -t nat -R POSTROUTING "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" -s "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".40.154 -p tcp -m tcp --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63306")]),t._v(" -j SNAT --to-source "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n")])])]),a("p",[t._v("注：这是只给外网的192.168.40.154连接， 其他的都连不上，")]),t._v(" "),a("p",[t._v("修改规则(4代表编号, --line-number可查看对应编号, -s 指定来源IP)。")]),t._v(" "),a("p",[t._v("查看nat规则")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -L -t nat --line-number\n")])])]),a("p",[t._v("删除nat规则")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("iptables -t nat -D POSTROUTING "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n-A 追加规则--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("iptables -A INPUT\n-D 删除规则--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("iptables -D INPUT "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("编号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-R 修改规则--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("iptables -R INPUT "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" -s "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".12.0 -j DROP 取代现行规则，顺序不变"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("是位置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-I 插入规则--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("iptables -I INPUT "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" --dport "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" -j ACCEPT 插入一条规则，原本位置上的规则将会往后移动一个顺位\n-L 查看规则--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("iptables -L INPUT 列出规则链中的所有规则\n-N 新的规则--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("iptables -N allowed 定义新的规则\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);